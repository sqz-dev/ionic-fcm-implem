# This is a basic workflow to help you get started with Actions

name: BUILD SIT

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "cicd/apk-builder" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # - name: Set the value
      #   run: echo "action_state=yellow" >> "$GITHUB_ENV"

      # - name: Use the value
      #   run: echo "${{ env.action_state }}"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
            node-version: 14.x

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '27.0.3'

      - name: Set up Android SDK ZipAlign
        run: |
          export ANDROID_HOME=$RUNNER_TEMP/android-sdk
          export PATH=$ANDROID_HOME/build-tools/27.0.3:$PATH
          echo $PATH

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # - name: Set up Gradle
      #   uses: gradle/gradle-build-action@v2
      #   with:
      #     gradle-version: 6.1.1

      # - name: Set Gradle environment variables
      #   run: |
      #     echo ${{ steps.gradle-setup.outputs.gradle_bin_dir }}
      #     echo "export PATH=${{ steps.gradle-setup.outputs.gradle_bin_dir }}:$PATH" >> $GITHUB_ENV
      #     echo $PATH

      - name: Install Ionic and Cordova
        run: npm install -g @ionic/cli@6.20.9 cordova@11.1.0

      - name: Run custom build script
        run: |
          echo "Running custom script: Build project..."
          chmod +x _prep.sh;
          ./_prep.sh

      - name: Run custom signer script
        id: sign-step-script
        env:
          KEYPASS: ${{ secrets.KEYPASS }}
        run: |
          echo "Running custom script: Sign release APK..."
          chmod +x ./sign/sign.sh
          ./sign/sign.sh $KEYPASS

      - name: ===> Use the value apk_name
        run: echo "${{ env.apk_name }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.sign-step-script.outputs.apkName }}-${{ github.sha }}-${{ github.run_number }}
          release_name: ${{ steps.sign-step-script.outputs.apkName }}-${{ github.sha }}-${{ github.run_number }}
          body: |
            Release: ${{ steps.sign-step-script.outputs.apkName }}
            SHA: ${{ github.sha }}
            Action Run Number: ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Build Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-release.zip
          asset_name: app-release.zip
          asset_content_type: application/zip
